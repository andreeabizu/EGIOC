{"version":3,"sources":["src/home.js","src/game.js","src/main.js"],"names":["HomeScene","Phaser","Scene","key","load","image","background","add","tileSprite","ground","physics","existing","body","immovable","moves","logo","setScale","play","setInteractive","on","scene","start","setTint","tilePositionX","GameScene","player","gameOver","stars","bombs","cakes","score","life","lifeText","scoreText","bombEvent","meatEvent","cakeEvent","spritesheet","frameWidth","frameHeight","audio","platforms","staticGroup","create","refreshBody","sprite","setBounce","setCollideWorldBounds","group","starEvent","time","addEvent","delay","callback","starsEvent","reset","Math","Between","callbackScope","loop","star","setCircle","setBounceY","FloatBetween","setVelocityX","bombsEvent","bomb","anims","cakesEvent","cake","frames","generateFrameNumbers","end","frameRate","repeat","frame","text","fontSize","fill","collider","overlap","collectPoints","destroy","sound","setText","collectLife","hitBomb","pause","paused","restart","gameover","cameras","main","startFollow","setBounds","cursors","input","keyboard","createCursorKeys","right","isDown","flipX","left","up","touching","down","setVelocityY","game","Game","type","WEBGL","width","height","parent","pixelArt","default","arcade","gravity","y","debug"],"mappings":"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","file":"main.ab254c71.js","sourceRoot":"..","sourcesContent":["class HomeScene extends Phaser.Scene {\r\n  constructor() {\r\n    super({\r\n      key: 'HomeScene'\r\n    })\r\n  }\r\n  preload() {\r\n    this.load.image('deea', './assets/image/deea.png')\r\n    this.load.image('play', './assets/image/play.png')\r\n    this.load.image('background', './assets/image/background.png')\r\n    this.load.image('platform', './assets/image/platform.png')\r\n \r\n  }\r\n  create() {\r\n\r\n   this.background = this.add.tileSprite(400, 300, 800, 600, 'background')\r\n   \r\n    this.ground = this.add.tileSprite(400, 568, 800, 135, 'platform')\r\n    this.physics.add.existing(this.ground)\r\n    this.ground.body.immovable = true\r\n    this.ground.body.moves = false\r\n\r\n    this.logo = this.add.image(400, 190, 'deea')\r\n    this.logo.setScale(1)\r\n\r\n    let play = this.add.image(400, 400, 'play')\r\n    play.setScale(0.4)\r\n    play.setInteractive()\r\n    play.on('pointerdown', () => this.scene.start('GameScene'))\r\n    play.on('pointerover', () => play.setTint(0xcccccc))\r\n    play.on('pointerout', () => play.setTint(0xffffff))\r\n  }\r\n\r\n  update() {\r\n    this.background.tilePositionX += 6\r\n  }\r\n}\r\n\r\nexport default HomeScene","class GameScene extends Phaser.Scene {\r\n    constructor() {\r\n      super({\r\n        key: 'GameScene'\r\n      })\r\n  \r\n      this.player\r\n      this.gameOver = false\r\n      this.stars\r\n      this.bombs\r\n      this.cakes\r\n      this.score = 0\r\n      this.life = 1\r\n      this.lifeText\r\n      this.scoreText\r\n      this.bombEvent\r\n      this.meatEvent\r\n      this.cakeEvent\r\n    }\r\n\r\n    preload() {\r\n      this.load.image('background','./assets/image/background.png')\r\n      this.load.image('ground', './assets/image/platform.png')\r\n      this.load.spritesheet('character', './assets/image/character.png', {frameWidth: 32, frameHeight: 48})\r\n      this.load.image('restart', 'assets/image/restart.png')\r\n      this.load.image('gameover', 'assets/image/gameOver.png')\r\n      this.load.image('star', './assets/image/star.png')\r\n      this.load.image('cake','./assets/image/cakee.png')\r\n      this.load.spritesheet('bomb', './assets/image/bombs.png', {frameWidth: 14.5, frameHeight: 12})\r\n      this.load.audio('death', 'assets/death.mp3')\r\n      this.load.audio('pickup', 'assets/pickup.wav')\r\n    \r\n    }\r\n  \r\n    create() {\r\n     this.background = this.add.tileSprite(400, 300, 1000, 600, 'background')\r\n     var platforms;\r\n     \r\n    \r\n     platforms = this.physics.add.staticGroup();\r\n     platforms.create(400, 568, 'ground').setScale(4.2).refreshBody();\r\n\r\n\r\n      this.player = this.physics.add.sprite(100, 450, 'character');\r\n      this.player.setScale(2.25)\r\n      this.player.setBounce(0.2);\r\n      this.player.setCollideWorldBounds(true);\r\n    \r\n      this.cakes = this.physics.add.group()\r\n      this.stars = this.physics.add.group()\r\n      this.bombs = this.physics.add.group()\r\n      this.starEvent = this.time.addEvent({ delay: 1000, callback: starsEvent, callbackScope: this, loop: true})\r\n      this.bombEvent = this.time.addEvent({ delay: 3000, callback: bombsEvent, callbackScope: this, loop: true})\r\n      this.cakeEvent = this.time.addEvent({ delay: 5000, callback: cakesEvent, callbackScope: this, loop: true})\r\n\r\n      function starsEvent() {\r\n        this.starEvent.reset({ delay: Phaser.Math.Between(1000 ,5000), callback: starsEvent, callbackScope: this, loop: true})\r\n        let star = this.stars.create(800, Phaser.Math.Between(200, 485), 'star')\r\n        star.setScale(1.5)\r\n        star.setCircle(6.5)\r\n        star.setBounceY(Phaser.Math.FloatBetween(0.6, 1.2))\r\n        this.stars.setVelocityX(Phaser.Math.Between(-1000, -300))\r\n      }\r\n  \r\n      function bombsEvent() {\r\n        this.bombEvent.reset({ delay: Phaser.Math.Between(3000 ,5000), callback: bombsEvent, callbackScope: this, loop: true})\r\n        let bomb = this.bombs.create(800, Phaser.Math.Between(300, 485), 'bomb')\r\n        bomb.setScale(4)\r\n        bomb.setCircle(5)\r\n        bomb.anims.play('boom', true)\r\n        bomb.setBounceY(1.2)\r\n        this.bombs.setVelocityX(Phaser.Math.Between(-1000, -300))\r\n      }\r\n\r\n       function cakesEvent(){\r\n        this.cakeEvent.reset({ delay: Phaser.Math.Between(7000 ,10000), callback: cakesEvent, callbackScope: this, loop: true})\r\n        let cake = this.cakes.create(800, Phaser.Math.Between(300, 485), 'cake')\r\n        cake.setScale(1.5)\r\n        cake.setCircle(2)\r\n        cake.setBounceY(Phaser.Math.FloatBetween(0.6, 1.2))\r\n        this.cakes.setVelocityX(Phaser.Math.Between(-1000, -300))\r\n\r\n      }\r\n\r\n        this.anims.create({\r\n          key: 'left',\r\n          frames: this.anims.generateFrameNumbers('character', { start: 0, end: 3 }),\r\n          frameRate: 10,\r\n          repeat: -1\r\n      });\r\n\r\n      this.anims.create({\r\n          key: 'turn',\r\n          frames: [ { key: 'character', frame: 4} ],\r\n          frameRate: 20\r\n      });\r\n\r\n      this.anims.create({\r\n          key: 'right',\r\n          frames: this.anims.generateFrameNumbers('character', { start: 5, end: 8 }),\r\n          frameRate: 10,\r\n          repeat: -1\r\n      });\r\n\r\n\r\n      this.anims.create({\r\n        key: 'boom',\r\n        frames: this.anims.generateFrameNumbers('bomb', { start: 0, end: 3 }),\r\n        frameRate: 10,\r\n        repeat: -1\r\n      })\r\n\r\n\r\n      \r\n   \r\n\r\n   this.scoreText = this.add.text(16, 16, 'SCORE: 0', { fontSize: '32px', fill: '#000' });\r\n   this.lifeText = this.add.text(580, 16, 'LIFE: 1', { fontSize: '32px', fill: '#000' });\r\n   function collectPoints (player, star)\r\n    {\r\n        star.destroy();\r\n        this.sound.add('pickup').play();\r\n        this.score = this.score+10;\r\n        this.scoreText.setText('SCORE: ' + this.score);\r\n    }\r\n\r\n    function collectLife (player, cake)\r\n    {\r\n        cake.destroy();\r\n        this.sound.add('pickup').play();\r\n        this.life = this.life + 1;\r\n        this.lifeText.setText('LIFE: ' + this.life);\r\n    }\r\n\r\n  function hitBomb (player, bomb)\r\n   {bomb.destroy();\r\n    this.life--;\r\n    this.lifeText.setText('LIFE: '+ this.life)\r\n    if(this.life==0)\r\n    {\r\n    this.physics.pause();\r\n    this.sound.add('death').play();\r\n    this.player.setTint(0xff0000);\r\n    this.bombEvent.paused = true\r\n    this.starEvent.paused = true\r\n    this.cakeEvent.paused = true\r\n    this.player.anims.play('turn');\r\n    this.gameOver = true;\r\n\r\n    let restart = this.add.image(400, 350, 'restart')\r\n      restart.setScale(4)\r\n      restart.setInteractive()\r\n      restart.on('pointerdown', () => {\r\n        this.scene.start('GameScene')\r\n        this.gameOver = false\r\n        this.life = 1\r\n        this.score = 0\r\n        \r\n          })\r\n      restart.on('pointerover', () => restart.setTint(0xcccccc))\r\n      restart.on('pointerout', () => restart.setTint(0xffffff))\r\n\r\n      this.gameover = this.add.image(400, 180, 'gameover')\r\n      this.gameover.setScale(0.8)\r\n     \r\n   }\r\n  }\r\n\r\n\r\n\r\n    this.physics.add.collider(this.player, platforms)\r\n    this.physics.add.collider(this.stars, platforms)\r\n    this.physics.add.collider(this.cakes, platforms)\r\n    this.physics.add.collider(this.bombs, platforms)\r\n    this.physics.add.overlap(this.player, this.stars, collectPoints, null, this)\r\n    this.physics.add.overlap(this.player, this.cakes, collectLife, null, this)\r\n    this.physics.add.collider(this.player, this.bombs, hitBomb, null, this)\r\n    this.cameras.main.startFollow(this.player, true, 0.05, 0.05)\r\n    this.cameras.main.setBounds(0, 0, 800, 600)\r\n    }\r\n  \r\n    update() {\r\n\r\nif(this.gameOver==false){\r\n    let cursors = this.input.keyboard.createCursorKeys()\r\n      if (cursors.right.isDown) {\r\n        this.player.setVelocityX(200)\r\n        this.player.flipX = false\r\n      this.player.anims.play('right', true)\r\n      }\r\n      else if (cursors.left.isDown) {\r\n        this.player.setVelocityX(-260)\r\n        this.player.anims.play('left', true)\r\n      }\r\n      else {\r\n        this.player.setVelocityX(0)\r\n        this.player.anims.play('right', true)\r\n      }\r\n      if (cursors.up.isDown && this.player.body.touching.down) {\r\n        this.player.setVelocityY(-600);\r\n      }\r\n    \r\n\r\n        this.background.tilePositionX += 6\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n  export default GameScene\r\n ","/** @type {import(\"../typings/phaser\")} */\r\n\r\nimport HomeScene from './home.js'\r\nimport GameScene from './game.js'\r\n\r\nlet game = new Phaser.Game({\r\n    type: Phaser.WEBGL,\r\n  width: 800,\r\n  height: 600,\r\n  parent: 'canvas',\r\n  pixelArt: true,\r\n  physics: {\r\n    default: 'arcade',\r\n    arcade: {\r\n      gravity: {\r\n        y: 1000\r\n      },\r\n      debug: false\r\n    }\r\n  },\r\n\r\n  scene: [\r\n\r\n  HomeScene,\r\n  GameScene\r\n  ]\r\n});\r\n"]}